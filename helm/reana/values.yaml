# Default values for reana.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# reana_hostname: reana.cern.ch
# `reana_hostname` should be set for third party integrations to work and for
# production deployments to be secure.

debug:
  enabled: false
eos:
  enabled: false
maintenance:
  enabled: false

workspaces:
  retention_rules:
    maximum_period: forever
    cronjob_schedule: "0 2 * * *"  # everyday at 2am
  paths:
    - /var/reana:/var/reana

interactive_sessions:
  cronjob_schedule: "0 3 * * *"  # everyday at 3am
  environments:
    jupyter:
      recommended:
        - image: "docker.io/jupyter/scipy-notebook:notebook-6.4.5"
          name: "Jupyter SciPy Notebook 6.4.5"
      allow_custom: false
  maximum_inactivity_period: forever

compute_backends:
  - kubernetes

shared_storage:
  backend: hostpath  # hostpath | cephfs | nfs
  volume_size: 200
  access_modes: ReadWriteMany
  shared_volume_mount_path: "/var/reana"
  hostpath:
    root_path: "/var/reana"
  cephfs:
    provisioner: manila-provisioner
    type: "Geneva CephFS Testing"
    availability_zone: nova
    os_secret_name: os-trustee
    os_secret_namespace: kube-system
    cephfs_os_share_id: <cephfs-share-id>
    cephfs_os_share_access_id: <cephfs-share-access-id>

# Storage used by REANA's infrastructure (i.e. message broker and database).
# If not specified, the shared storage containing the workspaces will be used instead.
infrastructure_storage: {}

secrets:
  database: {}
  gitlab: {}
  cern:
    sso: {}
  reana: {}
  login: {}

# Enable and configure SSO authentication via a third-party Keycloak identity provider
login: []

# External database service configuration
db_env_config:
  REANA_DB_NAME: "reana"
  REANA_DB_PORT: "5432"
  # There are two more environment variables that should be set in order
  # to connect to a database:
  # REANA_DB_USERNAME: containing the database user name.
  # REANA_DB_PASSWORD: containing the password for the user previously set.
  # Both environment variables should be set inside a Kubernetes secret:
  # `[release-name]-db-secrets`

# REANA components configuration
components:
  reana_ui:
    enabled: true
    docs_url: https://docs.reana.io
    forum_url: https://forum.reana.io
    file_preview_size_limit: 5242880  # 5 * 1024**2 = 5 MiB
    imagePullPolicy: IfNotPresent
    image: docker.io/reanahub/reana-ui:0.9.4
  reana_db:
    enabled: true
    image: docker.io/library/postgres:12.13
  reana_server:
    imagePullPolicy: IfNotPresent
    image: docker.io/reanahub/reana-server:0.9.3
    environment:
      REANA_MAX_CONCURRENT_BATCH_WORKFLOWS: 30
      REANA_SCHEDULER_REQUEUE_SLEEP: 15
      REANA_SCHEDULER_REQUEUE_COUNT: 200
      REANA_USER_EMAIL_CONFIRMATION: true
      REANA_WORKFLOW_SCHEDULING_POLICY: "fifo"
      REANA_WORKFLOW_SCHEDULING_READINESS_CHECK_LEVEL: 9
      REANA_RATELIMIT_GUEST_USER: "40 per second"
      REANA_RATELIMIT_AUTHENTICATED_USER: "40 per second"
      REANA_RATELIMIT_SLOW: "1/5 second"
    uwsgi:
      processes: 6
      threads: 4
      log_all: true
      log_4xx: true
      log_5xx: true
  reana_workflow_controller:
    imagePullPolicy: IfNotPresent
    image: docker.io/reanahub/reana-workflow-controller:0.9.3
    environment:
      SHARED_VOLUME_PATH: /var/reana
      REANA_JOB_STATUS_CONSUMER_PREFETCH_COUNT: 10
      REANA_OPENSEARCH_ENABLED: false
      REANA_OPENSEARCH_USE_SSL: true
      REANA_OPENSEARCH_CA_CERTS: "/code/certs/ca.crt"
      REANA_OPENSEARCH_USER: reana
      REANA_OPENSEARCH_PASSWORD: ""  # Set this value in the Helm command
  reana_workflow_engine_cwl:
    image: docker.io/reanahub/reana-workflow-engine-cwl:0.9.3
    environment: {}
  reana_workflow_engine_yadage:
    image: docker.io/reanahub/reana-workflow-engine-yadage:0.9.4
    environment: {}
  reana_workflow_engine_serial:
    image: docker.io/reanahub/reana-workflow-engine-serial:0.9.3
    environment: {}
  reana_workflow_engine_snakemake:
    image: docker.io/reanahub/reana-workflow-engine-snakemake:0.9.3
    environment: {}
  reana_job_controller:
    image: docker.io/reanahub/reana-job-controller:0.9.3
    environment: {}
  reana_message_broker:
    imagePullPolicy: IfNotPresent
    image: docker.io/reanahub/reana-message-broker:0.9.3

notifications:
  enabled: false
  email_config:
    smtp_starttls: true
    smtp_ssl: false
  system_status: "0 0 * * *"

# Accessing the cluster from outside world
ingress:
  enabled: true
  ingress_class_name: null
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
  tls:
    self_signed_cert: true
    hosts: []
  extra: []

# Permissions
serviceAccount:
  create: true
  name: reana

# Traefik's chart values.yaml
traefik:
  ports:
    web:
      nodePort: 30080
    websecure:
      nodePort: 30443
      tls:
        # without additional configs will use default insecure one
        enabled: true
  enabled: true
  rbac:
    enabled: true
  service:
    type: NodePort
  ingressClass:
    enabled: true
    isDefaultClass: true

pgbouncer:
  enabled: false
  image: docker.io/bitnami/pgbouncer:1.23.1
  pool_mode: transaction
  max_client_conn: 1000
  max_db_connections: 100
  environment: {}

# Quota
quota:
  enabled: true
  periodic_update_policy: "{{ .Values.quota.disk_update }}"
  workflow_termination_update_policy: "{{ .Values.quota.termination_update_policy }}"
  # backward compatibility
  disk_update: "0 3 * * *"  # everyday at 3am
  termination_update_policy: ""

# OpenSearch chart values.yaml
opensearch:
  enabled: false
  clusterName: "reana-opensearch"
  masterService: "reana-opensearch-master"
  tls:
    generate: true
    ca:
      cn: "reana.io"
      ttl: 365
    cert:
      cn: "reana-opensearch-master.default.svc.cluster.local"
      ttl: 180
    admin:
      cn: "opensearch-admin.reana.io"
      ttl: 180
  singleNode: true  # advanced storage configuration needed if set to false
  config:
    opensearch.yml: |
      cluster.name: reana-opensearch
      network.host: 0.0.0.0
      plugins:
        security:
          nodes_dn:
            - "CN={{ .Values.tls.cert.cn }}"
          authcz:
            admin_dn:
            - "CN={{ .Values.tls.admin.cn }}"
          ssl:
            transport:
              pemcert_filepath: certs/tls.crt
              pemkey_filepath: certs/tls.key
              pemtrustedcas_filepath: certs/ca.crt
              enforce_hostname_verification: false
            http:
              enabled: true
              pemcert_filepath: certs/tls.crt
              pemkey_filepath: certs/tls.key
              pemtrustedcas_filepath: certs/ca.crt
          allow_default_init_securityindex: true
          check_snapshot_restore_write_privileges: true
          enable_snapshot_restore_privilege: true
          ssl_cert_reload_enabled: true # https://opensearch.org/docs/latest/security/access-control/api/#reload-transport-certificates
          restapi:
            roles_enabled:
              - all_access
              - security_rest_api_access
          system_indices:
            enabled: true
            indices:
              [
                ".opendistro-alerting-config",
                ".opendistro-alerting-alert*",
                ".opendistro-anomaly-results*",
                ".opendistro-anomaly-detector*",
                ".opendistro-anomaly-checkpoints",
                ".opendistro-anomaly-detection-state",
                ".opendistro-reports-*",
                ".opendistro-notifications-*",
                ".opendistro-notebooks",
                ".opendistro-asynchronous-search-response*",
              ]
  extraEnvs:
    - name: DISABLE_INSTALL_DEMO_CONFIG
      value: "true"
  secretMounts:
    - name: reana-opensearch-tls-secrets
      secretName: reana-opensearch-tls-secrets
      path: /usr/share/opensearch/config/certs
  resources:
    requests:
      cpu: "1000m"
      memory: "4Gi"
  persistence:
    enabled: false
  securityConfig:
    enabled: true
    internalUsersSecret: "reana-opensearch-config-secrets"
    rolesSecret: "reana-opensearch-config-secrets"
    rolesMappingSecret: "reana-opensearch-config-secrets"
  extraVolumes:
    - name: reana-opensearch-volume
      hostPath:
        path: /var/reana
    # You can instead configure infrastructure volume:
    # - name: reana-opensearch-volume
    #   persistentVolumeClaim:
    #     claimName: reana-infrastructure-persistent-volume
    #     readOnly: false
    # Or shared volume:
    # - name: reana-opensearch-volume
    #   persistentVolumeClaim:
    #     claimName: reana-shared-persistent-volume
    #     readOnly: false
  extraVolumeMounts:
    - mountPath: /usr/share/opensearch/data
      subPath: opensearch
      name: reana-opensearch-volume
  # Configure REANA and FluentBit users and roles for job log collection
  customSecurityConfig:
    internalUsers:
      reana:
        hash: ""  # Required. To generate hash, run plugins/opensearch-security/tools/hash.sh -p <new-password>; supply in Helm command flags
        reserved: false
        backend_roles:
          - readall
        description: REANA user
      fluentbit:
        hash: ""  # Required. To generate hash, run plugins/opensearch-security/tools/hash.sh -p <new-password>; supply in Helm command flags
        reserved: false
        backend_roles:
          - fluentbit
        description: FluentBit user
    roles:
      fluentbit:
        reserved: true
        hidden: false
        description: Provide the minimum permissions for fluentbit
        cluster_permissions:
          - cluster_monitor
          - cluster_composite_ops
          - indices:admin/template/get
          - indices:admin/template/put
          - cluster:admin/ingest/pipeline/put
          - cluster:admin/ingest/pipeline/get
          - indices:data/write/bulk*
        index_permissions:
          - index_patterns:
            - fluentbit-*
            fls: []
            masked_fields: []
            allowed_actions:
              - crud
              - create_index
        tenant_permissions: []
        static: true
    rolesMapping:
      fluentbit:
        hosts: []
        users: []
        reserved: false
        hidden: false
        backend_roles:
        - fluentbit
        and_backend_roles: []
      own_index:
        hosts: []
        users:
          - "*"
        reserved: false
        hidden: false
        backend_roles: []
        and_backend_roles: []
        description: Allow full access to an index named like the username
      readall:
        hosts: []
        users:
          - "reana"
        reserved: false
        hidden: false
        backend_roles:
          - readall
        and_backend_roles: []
